<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://e11it.github.io/blog</id>
    <title>e11it home Blog</title>
    <updated>2022-05-19T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://e11it.github.io/blog"/>
    <subtitle>e11it home Blog</subtitle>
    <icon>https://e11it.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[NIFI secret recovery]]></title>
        <id>/2022/05/19/nifi-secrets</id>
        <link href="https://e11it.github.io/blog/2022/05/19/nifi-secrets"/>
        <updated>2022-05-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Случилась тут необходимость восстановить пароли от jks файлов, на которые ссылались контроллеры в NIFI.]]></summary>
        <content type="html"><![CDATA[<p>Случилась тут необходимость восстановить пароли от jks файлов, на которые ссылались контроллеры в NIFI.</p><p>Очень помогла статья: <a href="https://www.dreamincode.net/forums/blog/324/entry-5080-apache-nifi-sensitive-value-encryption/" target="_blank" rel="noopener noreferrer">Apache Nifi Sensitive Value Encryption</a></p><p>Все описанное работает, если в nifi.properites:
nifi.sensitive.props.algorithm=PBEWITHMD5AND256BITAES-CBC-OPENSSL</p><p>Итого по шагам:</p><ul><li>ищем flow.tag.gz</li><li>ищем зашифрованные пароль вида: <code>&lt;value&gt;enc{AE06E2E77C38A0EA899DB37FB7F6E05FFBA6529B2E9F90C914962FF2DD594020}&lt;/value&gt;</code></li><li>содержимое между фигурными скобками enc сохраняем в файл, в нашем случае это строка <code>AE06AE06..4020</code></li><li>смотрим ключ шифрования в nifi.properites, атрибут <code>nifi.sensitive.props.key</code></li><li>выполянем <code>./decrypt_sensitive.rb -i /path/to/file -p $nifi.sensitive.props.key</code></li></ul><p>Вывод должен быть похож на(зашифрованный пароль - <code>NewPasswordTest</code>):</p><div class="codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-text codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">/decrypt_sensitive.rb -i enc_1 -p testpassword</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Master passphrase: testpassword</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Salt: AE06E2E77C38A0EA899DB37FB7F6E05F 16</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Payload: FBA6529B2E9F90C914962FF2DD594020</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Output of EVP_BytesToKey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Hex key: 2fb794e8adf21b2aa960c8e87caa74d411ffcba2369b5dac38726c10437c6249 32</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Hex IV: b4103a85d1ece0eacba1ef327058da1d 16</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Plaintext decrypted: NewPasswordTest</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-ruby codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_YYkX">decrypt_sensitive.rb</div><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ruby codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">#!/usr/bin/env ruby</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">require 'openssl'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">require 'getoptlong'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#This script will attempt to decrypt sensitive values in Apache NiFi's flow.xml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#See the HELP block below for more information</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def bin_to_hex(s)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  s.each_byte.map { |b| b.to_s(16).rjust(2, '0') }.join</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def evp_bytes_to_key(key_len, iv_len, md, salt, data, count)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  key = ''.bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  key_ix = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  iv = ''.bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  iv_ix = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  md_buf = ''.bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  n_key = key_len</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  n_iv = iv_len</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  i = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  salt_length = salt.length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  if data == nil</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return [key, iv]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  add_md = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  while true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    md.reset</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if add_md &gt; 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      md.update md_buf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    add_md += 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    md.update data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if nil != salt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      md.update salt[0..salt_length-1]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    md_buf = md.digest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    (1..count-1).each do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      md.reset</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      md.update md_buf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      md_buf = md.digest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    i = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if n_key &gt; 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      while true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if n_key == 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          break</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if i == md_buf.length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          break</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        key[key_ix] = md_buf[i]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        key_ix += 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        n_key -= 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        i += 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if n_iv &gt; 0 &amp;&amp; i != md_buf.length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      while true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if n_iv == 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          break</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if i == md_buf.length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          break</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        iv[iv_ix] = md_buf[i]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        iv_ix += 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        n_iv -= 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        i += 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if n_key == 0 &amp;&amp; n_iv == 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      break</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  (0..md_buf.length-1).each do |j|</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    md_buf[j] = '0'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  [key, iv]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">HELP=&lt;&lt;ENDHELP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Usage: ./decrypt_sensitive.rb -i /path/to/file -p[optional]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --help,-h Print this help message</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -i        path to input file that is hex string inside of "enc{}" from the flow.xml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -p        passphrase from nifi.properties: "nifi.sensitive.props.key"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if not provided it will default to "nififtw!"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  This program will attempt to decrypt sensitive configuration items from the flow.xml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  in a NiFi instance. Hex encoding is 16 byte salt and the remainder is the ciphertext.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ENDHELP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">opts = GetoptLong.new(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ["--help","-h", GetoptLong::NO_ARGUMENT],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ["-i", GetoptLong::REQUIRED_ARGUMENT],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ["-p", GetoptLong::REQUIRED_ARGUMENT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if ARGV.length &lt; 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  puts HELP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  exit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">path = nil</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">master_passphrase = nil</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">opts.each do |opt, arg|</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  case opt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    when "--help"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      puts HELP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      exit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    when "-i"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      path = arg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    when "-p"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      master_passphrase = arg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">master_passphrase = "nififtw!" unless master_passphrase != nil</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">puts "Master passphrase: #{master_passphrase}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">payload = File.read(path).strip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#this is the first 16 bytes of the enc {} nonsense in the flow.xml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">master_salt = payload[0..31]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">payload_bytes = [payload[32..-1].strip].pack('H*')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">puts "Salt: #{master_salt} 16"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">puts "Payload: #{payload[32..-1].strip}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cipher = OpenSSL::Cipher.new 'AES-256-CBC'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cipher.decrypt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># If the salt was 8 bytes, this would work, but NiFi Jasypt uses a 16 byte salt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># This is the OpenSSL implementation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># cipher.pkcs5_keyivgen master_passphrase, master_salt, 1, OpenSSL::Digest::MD5.new</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">iterations = 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(key, iv) = evp_bytes_to_key cipher.key_len, cipher.iv_len, OpenSSL::Digest::MD5.new, [master_salt].pack('H*'), master_passphrase, iterations</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">key = key.join</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">iv = iv.join</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hex_key = bin_to_hex(key)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hex_iv = bin_to_hex(iv)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">puts ""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">puts "Output of EVP_BytesToKey"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">puts "Hex key: #{hex_key} #{key.length}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">puts "Hex  IV: #{hex_iv} #{iv.length}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">puts ""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cipher.key = key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cipher.iv = iv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#decrypted = cipher.update plaintext</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">decrypted = cipher.update(payload_bytes)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">decrypted &lt;&lt; cipher.final</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">puts "Plaintext decrypted: #{decrypted}"</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Ilya Makarov</name>
            <uri>https://github.com/e11it</uri>
        </author>
        <category label="nifi" term="nifi"/>
        <category label="recovery" term="recovery"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Encryption as a service]]></title>
        <id>/2022/05/18/kms-encryption</id>
        <link href="https://e11it.github.io/blog/2022/05/18/kms-encryption"/>
        <updated>2022-05-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Очень не хватает в компании KMS: сервиса, который бы позвoлял шифровать данные в БД, Kafka.]]></summary>
        <content type="html"><![CDATA[<p>Очень не хватает в компании KMS: сервиса, который бы позвoлял шифровать данные в БД, Kafka.
Но чтобы сами данные оставались в источниках, а не в Vault.</p><p>Собрал несоклько статей на эту тему.</p><ul><li>Hashicorp:<ul><li><a href="https://learn.hashicorp.com/tutorials/vault/eaas-transit" target="_blank" rel="noopener noreferrer">https://learn.hashicorp.com/tutorials/vault/eaas-transit</a></li><li><a href="https://github.com/hashicorp/go-kms-wrapping" target="_blank" rel="noopener noreferrer">https://github.com/hashicorp/go-kms-wrapping</a></li><li><a href="https://www.vaultproject.io/docs/secrets/transit" target="_blank" rel="noopener noreferrer">https://www.vaultproject.io/docs/secrets/transit</a></li></ul></li><li>Minio:<ul><li><a href="https://github.com/minio/kes" target="_blank" rel="noopener noreferrer">https://github.com/minio/kes</a></li></ul></li><li>AWS:<ul><li><a href="https://docs.aws.amazon.com/kms/latest/developerguide/overview.html" target="_blank" rel="noopener noreferrer">https://docs.aws.amazon.com/kms/latest/developerguide/overview.html</a></li><li><a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/kms.html" target="_blank" rel="noopener noreferrer">https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/kms.html</a></li></ul></li></ul><p>У Hashicorp уже все готово(как всегда).</p><p>Из открытых вопросов, это бекап данных и\или ключей.
Так же, как избежать ddos Vault, можно ли его масштабировать или только один узел будет обрабатывать(наверное да?).</p><p>Возможно, надо будет по аналогии с kes(от minio), выносить расшифровку в отдельный сервис и сделать более простой rest интерфейс.</p>]]></content>
        <author>
            <name>Ilya Makarov</name>
            <uri>https://github.com/e11it</uri>
        </author>
        <category label="kms" term="kms"/>
        <category label="hashicrorp" term="hashicrorp"/>
        <category label="vault" term="vault"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[RA на github]]></title>
        <id>/2022/05/17/github-ra</id>
        <link href="https://e11it.github.io/blog/2022/05/17/github-ra"/>
        <updated>2022-05-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Выложил на github свое решение, которым мы закрываем kafka-rest и schema-registry: ra]]></summary>
        <content type="html"><![CDATA[<p>Выложил на github свое решение, которым мы закрываем kafka-rest и schema-registry: <a href="https://github.com/e11it/ra" target="_blank" rel="noopener noreferrer">ra</a></p>]]></content>
        <author>
            <name>Ilya Makarov</name>
            <uri>https://github.com/e11it</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Welcome]]></title>
        <id>welcome</id>
        <link href="https://e11it.github.io/blog/welcome"/>
        <updated>2022-05-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Welcome to my blog!]]></summary>
        <content type="html"><![CDATA[<p>Welcome to my blog!</p>]]></content>
        <author>
            <name>Ilya Makarov</name>
            <uri>https://github.com/e11it</uri>
        </author>
        <category label="welcome" term="welcome"/>
    </entry>
</feed>