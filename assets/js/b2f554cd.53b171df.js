"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[477],{10:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"/2022/05/19/nifi-secrets","metadata":{"permalink":"/blog/2022/05/19/nifi-secrets","source":"@site/blog/2022-05-19-nifi-secrets.md","title":"NIFI secret recovery","description":"\u0421\u043b\u0443\u0447\u0438\u043b\u0430\u0441\u044c \u0442\u0443\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u0430\u0440\u043e\u043b\u0438 \u043e\u0442 jks \u0444\u0430\u0439\u043b\u043e\u0432, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0441\u044b\u043b\u0430\u043b\u0438\u0441\u044c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u044b \u0432 NIFI.","date":"2022-05-19T00:00:00.000Z","formattedDate":"19 \u043c\u0430\u044f 2022 \u0433.","tags":[{"label":"nifi","permalink":"/blog/tags/nifi"},{"label":"recovery","permalink":"/blog/tags/recovery"}],"readingTime":2.86,"truncated":true,"authors":[{"name":"Ilya Makarov","title":"E11it","url":"https://github.com/e11it","imageURL":"https://github.com/e11it.png","key":"e11it"}],"frontMatter":{"title":"NIFI secret recovery","authors":"e11it","tags":["nifi","recovery"]},"nextItem":{"title":"Encryption as a service","permalink":"/blog/2022/05/18/kms-encryption"}},"content":"\u0421\u043b\u0443\u0447\u0438\u043b\u0430\u0441\u044c \u0442\u0443\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u0430\u0440\u043e\u043b\u0438 \u043e\u0442 jks \u0444\u0430\u0439\u043b\u043e\u0432, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0441\u044b\u043b\u0430\u043b\u0438\u0441\u044c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u044b \u0432 NIFI.\\n\\n\u041e\u0447\u0435\u043d\u044c \u043f\u043e\u043c\u043e\u0433\u043b\u0430 \u0441\u0442\u0430\u0442\u044c\u044f: [Apache Nifi Sensitive Value Encryption](https://www.dreamincode.net/forums/blog/324/entry-5080-apache-nifi-sensitive-value-encryption/)\\n\\n\x3c!--truncate--\x3e\\n\\n\u0412\u0441\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u0435\u0441\u043b\u0438 \u0432 nifi.properites:\\nnifi.sensitive.props.algorithm=PBEWITHMD5AND256BITAES-CBC-OPENSSL\\n\\n\\n\u0418\u0442\u043e\u0433\u043e \u043f\u043e \u0448\u0430\u0433\u0430\u043c:\\n- \u0438\u0449\u0435\u043c flow.tag.gz\\n- \u0438\u0449\u0435\u043c \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0440\u043e\u043b\u044c \u0432\u0438\u0434\u0430: `<value>enc{AE06E2E77C38A0EA899DB37FB7F6E05FFBA6529B2E9F90C914962FF2DD594020}</value>`\\n- \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043c\u0435\u0436\u0434\u0443 \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u043c\u0438 \u0441\u043a\u043e\u0431\u043a\u0430\u043c\u0438 enc \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0432 \u0444\u0430\u0439\u043b, \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0430 `AE06AE06..4020`\\n- \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u043b\u044e\u0447 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432 nifi.properites, \u0430\u0442\u0440\u0438\u0431\u0443\u0442 `nifi.sensitive.props.key`\\n- \u0432\u044b\u043f\u043e\u043b\u044f\u043d\u0435\u043c `./decrypt_sensitive.rb -i /path/to/file -p $nifi.sensitive.props.key`\\n\\n\u0412\u044b\u0432\u043e\u0434 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u043e\u0445\u043e\u0436 \u043d\u0430(\u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c - `NewPasswordTest`):\\n```\\n/decrypt_sensitive.rb -i enc_1 -p testpassword\\nMaster passphrase: testpassword\\nSalt: AE06E2E77C38A0EA899DB37FB7F6E05F 16\\nPayload: FBA6529B2E9F90C914962FF2DD594020\\n\\nOutput of EVP_BytesToKey\\nHex key: 2fb794e8adf21b2aa960c8e87caa74d411ffcba2369b5dac38726c10437c6249 32\\nHex IV: b4103a85d1ece0eacba1ef327058da1d 16\\n\\nPlaintext decrypted: NewPasswordTest\\n```\\n\\n```ruby title=\\"decrypt_sensitive.rb\\"\\n#!/usr/bin/env ruby\\n\\nrequire \'openssl\'\\nrequire \'getoptlong\'\\n\\n#This script will attempt to decrypt sensitive values in Apache NiFi\'s flow.xml\\n#See the HELP block below for more information\\n\\ndef bin_to_hex(s)\\n  s.each_byte.map { |b| b.to_s(16).rjust(2, \'0\') }.join\\nend\\n\\ndef evp_bytes_to_key(key_len, iv_len, md, salt, data, count)\\n  key = \'\'.bytes\\n  key_ix = 0\\n  iv = \'\'.bytes\\n  iv_ix = 0\\n  md_buf = \'\'.bytes\\n  n_key = key_len\\n  n_iv = iv_len\\n  i = 0\\n  salt_length = salt.length\\n  if data == nil\\n    return [key, iv]\\n  end\\n  add_md = 0\\n  while true\\n    md.reset\\n    if add_md > 0\\n      md.update md_buf\\n    end\\n    add_md += 1\\n    md.update data\\n    if nil != salt\\n      md.update salt[0..salt_length-1]\\n    end\\n    md_buf = md.digest\\n    (1..count-1).each do\\n      md.reset\\n      md.update md_buf\\n      md_buf = md.digest\\n    end\\n    i = 0\\n    if n_key > 0\\n      while true\\n        if n_key == 0\\n          break\\n        end\\n        if i == md_buf.length\\n          break\\n        end\\n        key[key_ix] = md_buf[i]\\n        key_ix += 1\\n        n_key -= 1\\n        i += 1\\n      end\\n    end\\n    if n_iv > 0 && i != md_buf.length\\n      while true\\n        if n_iv == 0\\n          break\\n        end\\n        if i == md_buf.length\\n          break\\n        end\\n        iv[iv_ix] = md_buf[i]\\n        iv_ix += 1\\n        n_iv -= 1\\n        i += 1\\n      end\\n    end\\n    if n_key == 0 && n_iv == 0\\n      break\\n    end\\n  end\\n  (0..md_buf.length-1).each do |j|\\n    md_buf[j] = \'0\'\\n  end\\n  [key, iv]\\nend\\n\\nHELP=<<ENDHELP\\nUsage: ./decrypt_sensitive.rb -i /path/to/file -p[optional]\\n\\n  --help,-h Print this help message\\n  -i        path to input file that is hex string inside of \\"enc{}\\" from the flow.xml\\n  -p        passphrase from nifi.properties: \\"nifi.sensitive.props.key\\"\\n            if not provided it will default to \\"nififtw!\\"\\n\\n  This program will attempt to decrypt sensitive configuration items from the flow.xml\\n  in a NiFi instance. Hex encoding is 16 byte salt and the remainder is the ciphertext.\\nENDHELP\\n\\nopts = GetoptLong.new(\\n  [\\"--help\\",\\"-h\\", GetoptLong::NO_ARGUMENT],\\n  [\\"-i\\", GetoptLong::REQUIRED_ARGUMENT],\\n  [\\"-p\\", GetoptLong::REQUIRED_ARGUMENT]\\n)\\n\\n\\nif ARGV.length < 1\\n  puts HELP\\n  exit\\nend\\n\\npath = nil\\nmaster_passphrase = nil\\n\\nopts.each do |opt, arg|\\n  case opt\\n    when \\"--help\\"\\n      puts HELP\\n      exit\\n    when \\"-i\\"\\n      path = arg\\n    when \\"-p\\"\\n      master_passphrase = arg\\n  end\\nend\\n\\nmaster_passphrase = \\"nififtw!\\" unless master_passphrase != nil\\nputs \\"Master passphrase: #{master_passphrase}\\"\\n\\npayload = File.read(path).strip\\n\\n#this is the first 16 bytes of the enc {} nonsense in the flow.xml\\nmaster_salt = payload[0..31]\\npayload_bytes = [payload[32..-1].strip].pack(\'H*\')\\n\\nputs \\"Salt: #{master_salt} 16\\"\\nputs \\"Payload: #{payload[32..-1].strip}\\"\\n\\ncipher = OpenSSL::Cipher.new \'AES-256-CBC\'\\ncipher.decrypt\\n\\n# If the salt was 8 bytes, this would work, but NiFi Jasypt uses a 16 byte salt\\n# This is the OpenSSL implementation\\n# cipher.pkcs5_keyivgen master_passphrase, master_salt, 1, OpenSSL::Digest::MD5.new\\n\\niterations = 1\\n(key, iv) = evp_bytes_to_key cipher.key_len, cipher.iv_len, OpenSSL::Digest::MD5.new, [master_salt].pack(\'H*\'), master_passphrase, iterations\\n\\nkey = key.join\\niv = iv.join\\n\\nhex_key = bin_to_hex(key)\\nhex_iv = bin_to_hex(iv)\\n\\nputs \\"\\"\\nputs \\"Output of EVP_BytesToKey\\"\\nputs \\"Hex key: #{hex_key} #{key.length}\\"\\nputs \\"Hex  IV: #{hex_iv} #{iv.length}\\"\\n\\nputs \\"\\"\\n\\ncipher.key = key\\ncipher.iv = iv\\n\\n#decrypted = cipher.update plaintext\\ndecrypted = cipher.update(payload_bytes)\\ndecrypted << cipher.final\\n\\nputs \\"Plaintext decrypted: #{decrypted}\\"\\n```"},{"id":"/2022/05/18/kms-encryption","metadata":{"permalink":"/blog/2022/05/18/kms-encryption","source":"@site/blog/2022-05-18-kms-encryption.md","title":"Encryption as a service","description":"\u041e\u0447\u0435\u043d\u044c \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u0435\u0442 \u0432 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 KMS: \u0441\u0435\u0440\u0432\u0438\u0441\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b \u043f\u043e\u0437\u0432o\u043b\u044f\u043b \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0411\u0414, Kafka.","date":"2022-05-18T00:00:00.000Z","formattedDate":"18 \u043c\u0430\u044f 2022 \u0433.","tags":[{"label":"kms","permalink":"/blog/tags/kms"},{"label":"hashicrorp","permalink":"/blog/tags/hashicrorp"},{"label":"vault","permalink":"/blog/tags/vault"}],"readingTime":0.5,"truncated":false,"authors":[{"name":"Ilya Makarov","title":"E11it","url":"https://github.com/e11it","imageURL":"https://github.com/e11it.png","key":"e11it"}],"frontMatter":{"title":"Encryption as a service","authors":"e11it","tags":["kms","hashicrorp","vault"]},"prevItem":{"title":"NIFI secret recovery","permalink":"/blog/2022/05/19/nifi-secrets"},"nextItem":{"title":"RA \u043d\u0430 github","permalink":"/blog/2022/05/17/github-ra"}},"content":"\u041e\u0447\u0435\u043d\u044c \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u0435\u0442 \u0432 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 KMS: \u0441\u0435\u0440\u0432\u0438\u0441\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b \u043f\u043e\u0437\u0432o\u043b\u044f\u043b \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0411\u0414, Kafka. \\n\u041d\u043e \u0447\u0442\u043e\u0431\u044b \u0441\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0441\u0442\u0430\u0432\u0430\u043b\u0438\u0441\u044c \u0432 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430\u0445, \u0430 \u043d\u0435 \u0432 Vault.\\n\\n\\n\u0421\u043e\u0431\u0440\u0430\u043b \u043d\u0435\u0441\u043e\u043a\u043b\u044c\u043a\u043e \u0441\u0442\u0430\u0442\u0435\u0439 \u043d\u0430 \u044d\u0442\u0443 \u0442\u0435\u043c\u0443.\\n* Hashicorp:\\n  - https://learn.hashicorp.com/tutorials/vault/eaas-transit\\n  - https://github.com/hashicorp/go-kms-wrapping\\n  - https://www.vaultproject.io/docs/secrets/transit\\n* Minio:\\n  - https://github.com/minio/kes\\n* AWS:\\n  - https://docs.aws.amazon.com/kms/latest/developerguide/overview.html\\n  - https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/kms.html\\n\\n\\n\u0423 Hashicorp \u0443\u0436\u0435 \u0432\u0441\u0435 \u0433\u043e\u0442\u043e\u0432\u043e(\u043a\u0430\u043a \u0432\u0441\u0435\u0433\u0434\u0430).\\n\\n\u0418\u0437 \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0445 \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432, \u044d\u0442\u043e \u0431\u0435\u043a\u0430\u043f \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\\\\\u0438\u043b\u0438 \u043a\u043b\u044e\u0447\u0435\u0439. \\n\u0422\u0430\u043a \u0436\u0435, \u043a\u0430\u043a \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c ddos Vault, \u043c\u043e\u0436\u043d\u043e \u043b\u0438 \u0435\u0433\u043e \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0443\u0437\u0435\u043b \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c(\u043d\u0430\u0432\u0435\u0440\u043d\u043e\u0435 \u0434\u0430?).\\n\\n\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043d\u0430\u0434\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438 \u0441 kes(\u043e\u0442 minio), \u0432\u044b\u043d\u043e\u0441\u0438\u0442\u044c \u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0443 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0438\u0441 \u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 rest \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441."},{"id":"/2022/05/17/github-ra","metadata":{"permalink":"/blog/2022/05/17/github-ra","source":"@site/blog/2022-05-17-github-ra.md","title":"RA \u043d\u0430 github","description":"\u0412\u044b\u043b\u043e\u0436\u0438\u043b \u043d\u0430 github \u0441\u0432\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043c\u044b \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c kafka-rest \u0438 schema-registry: ra","date":"2022-05-17T00:00:00.000Z","formattedDate":"17 \u043c\u0430\u044f 2022 \u0433.","tags":[],"readingTime":0.06,"truncated":false,"authors":[{"name":"Ilya Makarov","title":"E11it","url":"https://github.com/e11it","imageURL":"https://github.com/e11it.png","key":"e11it"}],"frontMatter":{"title":"RA \u043d\u0430 github","authors":"e11it"},"prevItem":{"title":"Encryption as a service","permalink":"/blog/2022/05/18/kms-encryption"},"nextItem":{"title":"Welcome","permalink":"/blog/welcome"}},"content":"\u0412\u044b\u043b\u043e\u0436\u0438\u043b \u043d\u0430 github \u0441\u0432\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043c\u044b \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c kafka-rest \u0438 schema-registry: [ra](https://github.com/e11it/ra)"},{"id":"welcome","metadata":{"permalink":"/blog/welcome","source":"@site/blog/2022-05-16-welcome/index.md","title":"Welcome","description":"Welcome to my blog!","date":"2022-05-16T00:00:00.000Z","formattedDate":"16 \u043c\u0430\u044f 2022 \u0433.","tags":[{"label":"welcome","permalink":"/blog/tags/welcome"}],"readingTime":0.02,"truncated":false,"authors":[{"name":"Ilya Makarov","title":"E11it","url":"https://github.com/e11it","imageURL":"https://github.com/e11it.png","key":"e11it"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["e11it"],"tags":["welcome"]},"prevItem":{"title":"RA \u043d\u0430 github","permalink":"/blog/2022/05/17/github-ra"}},"content":"Welcome to my blog!"}]}')}}]);